{"version":3,"sources":["utils/localeContext.js","messages.js","utils/config.js","appBar/AboutDialog.js","appBar/LeftMenu.js","appBar/MainAppBar.js","NotFound.js","utils/api.js","testApi/TestAPI.js","components/FormikTextField.js","components/FormikFormText.js","simpleSir/SIRForm.js","utils/dateGenerator.js","simpleSir/ChartView.js","simpleSir/SIRView.js","complexSir/ComplexSIRForm.js","complexSir/ComplexChartView.js","complexSir/ComplexSIRView.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LocaleContext","React","createContext","messages","fr","projectTitle","pageNotFound","returnToHomepage","cancel","save","appBar","about","developpedBy","version","questionsOrRemarks","wip","help","login","logout","mainMenu","home","simpleSIR","complexSIR","testAPI","error","shouldBeNumber","positiveNumber","tooSmall","tooLarge","required","form","population","r0","s0","lambda","beta","compute","kpe","krd","taux_tgs","taux_thr","tem","tmg","tmh","thg","thr","trsr","lim_time","tip","chart","exposed","infected","hospitalized","intensive_care","exit_intensive_care","dead","API_URL","AboutDialog","onClose","useState","open","setOpen","t","useTranslate","MenuItem","onClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","useStyles","makeStyles","theme","createStyles","menuButton","marginRight","spacing","LeftMenu","classes","anchorEl","setAnchorEl","useContext","locale","setLocale","useLocaleContext","handleCloseMenu","Tooltip","title","IconButton","edge","className","color","aria-label","event","currentTarget","keepMounted","Boolean","root","flexGrow","MainAppBar","AppBar","position","Toolbar","Typography","variant","Link","component","RouterLink","to","NotFound","src","process","alt","style","display","margin","marginTop","axios","create","baseURL","responseType","TestAPI","a","b","placeholderData","setPlaceholderData","result","placeholderDataPOST","setPlaceholderDataPOST","placeholderDataGET","setPlaceholderDataGET","useEffect","api","get","response","data","f","handleClick","inputFunction","x","y","params","responseGET","post","responsePOST","Box","m","Button","textField","palette","text","secondary","FormikTextField","name","select","children","formikProps","tooltipTitle","values","touched","errors","handleChange","handleBlur","disableFocusListener","disableHoverListener","TextField","label","value","onChange","onBlur","InputLabelProps","shrink","helperText","onMouseEnter","onMouseLeave","formControl","minWidth","FormikFormText","FormControl","grid","actions","float","SIRForm","enableReinitialize","initialValues","onSubmit","setSubmitting","parseFloat","validationSchema","Yup","shape","typeError","positive","min","max","props","Grid","container","direction","justify","alignItems","item","type","generateDates","startDate","numberOfDays","eachDayOfInterval","start","end","addDays","map","date","format","day0","Date","SIRView","setValues","console","log","parameters","xs","healthy","removed","lineData","labels","length","datasets","backgroundColor","borderWidth","width","height","options","fontSize","tooltips","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","scales","yAxes","scaleLabel","labelString","xAxes","Chart","paddingTop","paddingLeft","paddingRight","card","ComplexSIRView","Card","CardContent","recovered","Home","match","path","setValue","Paper","square","Tabs","indicatorColor","textColor","newValue","Tab","exact","render","routeProps","App","localeStateHook","Provider","en","basename","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.329ac128.chunk.js","sourcesContent":["import React from 'react';\n\nconst defaultLocaleContext = ['fr', () => { }];\n\nconst LocaleContext = React.createContext(defaultLocaleContext);\n\nexport const useLocaleContext = () => {\n    const [locale, setLocale] = React.useContext(LocaleContext);\n    return {\n        locale: locale,\n        setLocale: setLocale,\n    };\n};\n\nexport default LocaleContext;\n","const messages = {\n    fr: {\n        projectTitle: 'Projet MODSIR19',\n        pageNotFound: 'Page non trouvée',\n        returnToHomepage: 'Retourner à la page principale',\n        cancel: 'Annuler',\n        save: 'Enregistrer',\n        appBar: {\n            about: 'A propos de',\n            developpedBy: 'Application développée par',\n            version: 'Version',\n            questionsOrRemarks: 'Questions ou remarques :',\n            wip: 'En cours de développement',\n            help: 'Aide',\n            login: 'Se connecter',\n            logout: 'Se déconnecter',\n            mainMenu: 'Menu',\n        },\n        home: {\n            simpleSIR: 'Modèle SIR simple',\n            complexSIR: 'Modèle SIR complexe',\n            testAPI: \"Tester l'API\",\n        },\n        error: {\n            shouldBeNumber: 'Doit être un nombre',\n            positiveNumber: 'Doit être un nombre positif',\n            tooSmall: 'Cela parait petit',\n            tooLarge: \"N'est pas un peu grand ?\",\n            required: 'Obligatoire',\n        },\n        form: {\n            population: 'Population',\n            r0: 'R0',\n            s0: 'S0',\n            lambda: 'Paramètre lambda',\n            beta: 'Paramètre beta',\n            compute: 'Calculer',\n            kpe: 'Kpe',\n            krd: 'Krd',\n            taux_tgs: 'TGS',\n            taux_thr: 'THR',\n            tem: 'Tem',\n            tmg: 'Tmg',\n            tmh: 'Tmh',\n            thg: 'Thg',\n            thr: 'Thr',\n            trsr: 'Trsr',\n            lim_time: 'Nombre de jours',\n            tip: {\n                population: 'Effectif de la population',\n                s0: \"Proportion initiale d'individus sains\",\n                lambda: 'Temps moyen avant guérison',\n                beta: \"Taux d'infection en individus par unité de temps\",\n                r0: 'Taux de contagiosité standard',\n                taux_tgs: 'Taux de guérison spontannée',\n                taux_thr: \"Taux de patients très graves d'emblée\",\n                kpe: 'Taux de population exposée',\n                krd: 'Taux de décès en réanimation',\n                tem: 'Temps Exposé - Malade',\n                tmg: 'Temps Malade - Guéri',\n                tmh: 'Temps Malade - Hospitalisé',\n                thg: 'Temps Hospitalisé - Guéri',\n                thr: 'Temps Hospitalisé - Réanimation',\n                trsr: 'Temps Réanimation - Sortie de Réanimation',\n                lim_time: 'Nombre de jours simulés',\n            },\n        },\n        chart: {\n            exposed: 'exposés',\n            infected: 'infectés',\n            hospitalized: 'hospitalisés',\n            intensive_care: 'soins intensifs',\n            exit_intensive_care: 'sortie soins intensifs',\n            dead: 'décédés',\n        },\n    },\n};\n\nexport default messages;\n","const prod = process.env.NODE_ENV === 'production'; // Anything else is treated as 'dev'\n\nexport const API_URL = prod\n    ? 'https://covid19.nancyclotep.com/modsir19servertest'\n    : 'http://localhost:5000';\n\nif (!API_URL) {\n    console.log('No API connection string. Set API_URL environment variable.');\n}\n\nexport const VERSION = '0.1';\n","import React from 'react';\nimport { useTranslate } from 'react-polyglot';\nimport { MenuItem, Dialog, DialogTitle, DialogContent, DialogContentText } from '@material-ui/core';\nimport { VERSION } from '../utils/config';\n\nconst AboutDialog = ({ onClose }) => {\n    const [open, setOpen] = React.useState(false);\n    const t = useTranslate();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        onClose();\n    };\n\n    return (\n        <div>\n            <MenuItem onClick={handleClickOpen}>\n                {t('appBar.about')} {t('projectTitle')}\n            </MenuItem>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{t('projectTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {t('appBar.developpedBy')} Mines-Nancy. © 2020.\n                        <br />\n                        {t('appBar.version')} {VERSION} -- {t('appBar.wip')}\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\nexport default AboutDialog;\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Menu, IconButton, Tooltip, MenuItem, Divider } from '@material-ui/core';\nimport AboutDialog from './AboutDialog';\nimport { useTranslate } from 'react-polyglot';\nimport { useLocaleContext } from '../utils/localeContext';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nconst LeftMenu = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const t = useTranslate();\n    const { locale, setLocale } = useLocaleContext();\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleCloseMenu = () => {\n        setAnchorEl(null);\n    };\n\n    const handleSwitchLanguage = () => {\n        if (locale === 'fr') {\n            setLocale('en');\n        } else {\n            setLocale('fr');\n        }\n        handleCloseMenu();\n    };\n\n    return (\n        <div>\n            <Tooltip title={t('appBar.mainMenu')}>\n                <IconButton\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={handleMenu}\n                >\n                    <MenuIcon />\n                </IconButton>\n            </Tooltip>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleCloseMenu}\n            >\n                <AboutDialog onClose={handleCloseMenu} />\n            </Menu>\n        </div>\n    );\n};\nexport default LeftMenu;\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport LeftMenu from './LeftMenu';\nimport { Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useTranslate } from 'react-polyglot';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        title: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(1),\n        },\n    }),\n);\n\nexport const MainAppBar = () => {\n    const classes = useStyles();\n    const t = useTranslate();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <LeftMenu />\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link component={RouterLink} color=\"inherit\" to=\"/\">\n                            {t('projectTitle')}\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-polyglot';\n\nconst NotFound = () => {\n    const t = useTranslate();\n    return (\n        <div>\n            <img\n                src={`${process.env.PUBLIC_URL}/404.png`}\n                alt={t('pageNotFound')}\n                style={{\n                    display: 'block',\n                    margin: 'auto',\n                    marginTop: '50px',\n                    position: 'relative',\n                }}\n            />\n            <Link to=\"/\">{t('returnToHomepage')}</Link>\n        </div>\n    );\n};\nexport default NotFound;\n","import axios from 'axios';\nimport { API_URL } from './config';\n\nexport default axios.create({\n    baseURL: API_URL,\n    responseType: 'json',\n});\n","import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport api from '../utils/api';\n\nexport const TestAPI = () => {\n    const [placeholderData, setPlaceholderData] = useState({ a: 0, b: 0 });\n    const [placeholderDataPOST, setPlaceholderDataPOST] = useState({ result: 0 });\n    const [placeholderDataGET, setPlaceholderDataGET] = useState({ result: 0 });\n\n    useEffect(() => {\n        const f = async () => {\n            const response = await api.get('/get_data_sample');\n            setPlaceholderData(response.data);\n        };\n        f();\n    }, []);\n\n    const handleClick = async () => {\n        // Example pour envoyer un appel POST a l'API\n        const inputFunction = { x: 2, y: 3 };\n\n        const responseGET = await api.get('/get_add_data', {\n            params: { inputFunction },\n        });\n        setPlaceholderDataGET(responseGET.data);\n\n        const responsePOST = await api.post('/add_data', {\n            inputFunction,\n        });\n        setPlaceholderDataPOST(responsePOST.data);\n    };\n\n    return (\n        <Box m={8}>\n            <Typography variant=\"h4\" component=\"h2\">\n                Data récupérée de l'API python: (a: {placeholderData.a}, b: {placeholderData.b})\n            </Typography>\n\n            <Button color=\"primary\" onClick={handleClick}>\n                Recupérer données\n            </Button>\n            <Typography variant=\"h4\" component=\"h2\">\n                GET 2 + 3 = {placeholderDataGET.result}\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n                POST 2 + 3 = {placeholderDataPOST.result}\n            </Typography>\n        </Box>\n    );\n};\n","import React from 'react';\nimport { TextField, makeStyles, createStyles, Tooltip } from '@material-ui/core';\nimport { useTranslate } from 'react-polyglot';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        textField: {\n            // padding: theme.spacing(2),\n            // textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nconst FormikTextField = ({ name, required, select, children, formikProps, tooltipTitle }) => {\n    const classes = useStyles();\n    const t = useTranslate();\n    const { values, touched, errors, handleChange, handleBlur } = formikProps;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Tooltip\n            title={tooltipTitle ? tooltipTitle : t(`form.tip.${name}`)}\n            disableFocusListener={true}\n            disableHoverListener={Boolean(!tooltipTitle) && Boolean(t(`form.tip.${name}`) === '')}\n            open={open}\n        >\n            <TextField\n                required={required}\n                select={select}\n                className={classes.textField}\n                name={name}\n                label={t(`form.${name}`)}\n                value={values[name]}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                helperText={errors[name] && touched[name] && errors[name]}\n                error={Boolean(errors[name] && touched[name])}\n                onMouseEnter={() => setOpen(true)}\n                onMouseLeave={() => setOpen(false)}\n                onClick={() => setOpen(false)}\n            >\n                {children}\n            </TextField>\n        </Tooltip>\n    );\n};\nexport default FormikTextField;\n","import React from 'react';\nimport { makeStyles, createStyles, FormControl } from '@material-ui/core';\nimport FormikTextField from './FormikTextField';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 180,\n        },\n    }),\n);\n\nconst FormikFormText = ({ name, required, formikProps, tooltipTitle }) => {\n    const classes = useStyles();\n\n    return (\n        <FormControl className={classes.formControl}>\n            <FormikTextField\n                required={required}\n                name={name}\n                formikProps={formikProps}\n                tooltipTitle={tooltipTitle}\n            />\n        </FormControl>\n    );\n};\nexport default FormikFormText;\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Grid, FormControl, Button } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useTranslate } from 'react-polyglot';\nimport FormikFormText from '../components/FormikFormText';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        grid: {\n            // paddingLeft: '2em',\n            // paddingRight: '2em',\n        },\n        actions: {\n            float: 'left',\n            margin: theme.spacing(1),\n        },\n        textField: {\n            // padding: theme.spacing(2),\n            // textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nconst validationSchema = (t) =>\n    Yup.object().shape({\n        s0: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n        lambda: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 20.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 20.')\n            .max(20, 'Veuillez entrer un nombre entre 0 et 20.')\n            .required('Ce champs est obligatoire'),\n        beta: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n    });\n\nexport const SIRForm = ({ onChange }) => {\n    const classes = useStyles();\n    const t = useTranslate();\n    const initialValues = {\n        s0: 0.7,\n        lambda: 12,\n        beta: 0.5,\n    };\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={initialValues}\n            onSubmit={(values, { setSubmitting }) => {\n                onChange({\n                    s0: parseFloat(values['s0']),\n                    lambda: parseFloat(values['lambda']),\n                    beta: parseFloat(values['beta']),\n                });\n            }}\n            validationSchema={validationSchema()}\n        >\n            {(props) => (\n                <Form>\n                    <Grid\n                        className={classes.grid}\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <FormControl className={classes.formControl}>\n                            <Grid item>\n                                <FormikFormText name=\"s0\" formikProps={props} />\n                            </Grid>\n                            <Grid item>\n                                <FormikFormText name=\"lambda\" formikProps={props} />\n                            </Grid>\n                            <Grid item>\n                                <FormikFormText name=\"beta\" formikProps={props} />\n                            </Grid>\n                        </FormControl>\n                        <Grid item>\n                            <Button\n                                className={classes.actions}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                            >\n                                {t('form.compute')}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n","import { eachDayOfInterval, addDays, format } from 'date-fns';\n\nexport const generateDates = (startDate, numberOfDays) =>\n    eachDayOfInterval({\n        start: startDate,\n        end: addDays(startDate, numberOfDays),\n    }).map((date) => format(date, 'dd/MM/yyyy'));\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { generateDates } from '../utils/dateGenerator';\n\nconst day0 = new Date(2020, 0, 23);\n\nexport const Chart = (values) => {\n    const { healthy, infected, removed } = values;\n\n    const lineData = {\n        labels: generateDates(day0, healthy.length),\n        datasets: [\n            {\n                label: ['Population saine'],\n                data: healthy,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: ['Population infectée'],\n                data: infected,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: ['Population rétablie'],\n                data: removed,\n                backgroundColor: 'rgba(255, 88, 132, 0.6)',\n                borderWidth: 2,\n            },\n        ],\n    };\n\n    return (\n        <div className=\"Chart\">\n            <Line\n                data={lineData}\n                width=\"10\"\n                height=\"10\"\n                options={{\n                    title: {\n                        display: true,\n                        text: 'Modèle SIR simple',\n                        fontSize: 25,\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: (tooltipItem, data) => {\n                                let label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                if (label) {\n                                    label += ': ';\n                                }\n                                label += Math.round(tooltipItem.yLabel * 100) / 100;\n                                return label;\n                            },\n                        },\n                    },\n                    scales: {\n                        yAxes: [\n                            {\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Part de la population',\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                        xAxes: [\n                            {\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Temps',\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                    },\n                }}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport { SIRForm } from './SIRForm';\nimport { Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Chart } from './ChartView';\nimport api from '../utils/api';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport const SIRView = () => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState();\n    // eslint-disable-next-line no-console\n    console.log({ values });\n\n    const handleClick = async (parameters) => {\n        const response = await api.get('/get_simple_sir', {\n            params: { parameters },\n        });\n        setValues(response.data);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" component=\"h2\">\n                Entrer les paramètres du modèle SIR dans les champs suivants puis cliquer sur\n                CALCULER.\n            </Typography>\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n                <Grid item xs={12}>\n                    <SIRForm onChange={handleClick} />\n                </Grid>\n                {values && (\n                    <Grid item xs={6}>\n                        {' '}\n                        {Chart(values)}{' '}\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n};\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Grid, FormControl, Button } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useTranslate } from 'react-polyglot';\nimport FormikFormText from '../components/FormikFormText';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        grid: {\n            // paddingLeft: '2em',\n            // paddingRight: '2em',\n        },\n        actions: {\n            float: 'left',\n            margin: theme.spacing(1),\n        },\n        textField: {\n            // padding: theme.spacing(2),\n            // textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nconst validationSchema = (t) =>\n    Yup.object().shape({\n        population: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        kpe: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n        krd: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n        r0: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 5.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 5.')\n            .max(5, 'Veuillez entrer un nombre entre 0 et 5.')\n            .required('Ce champs est obligatoire'),\n        taux_tgs: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n        taux_thr: Yup.number()\n            .typeError('Veuillez entrer un nombre')\n            .positive('Veuillez entrer un nombre entre 0 et 1.')\n            .min(0, 'Veuillez entrer un nombre entre 0 et 1.')\n            .max(1, 'Veuillez entrer un nombre entre 0 et 1.')\n            .required('Ce champs est obligatoire'),\n        tem: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        tmg: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        tmh: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        thg: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        thr: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        trsr: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n        lim_time: Yup.number()\n            .typeError('Veuillez entrer un nombre entier positif')\n            .positive('Veuillez entrer un nombre positif.')\n            .min(0, 'Veuillez entrer un nombre positif.')\n            .required('Ce champs est obligatoire'),\n    });\n\nexport const SIRForm = ({ onChange }) => {\n    const classes = useStyles();\n    const t = useTranslate();\n    const initialValues = {\n        population: 500000,\n        kpe: 0.6,\n        krd: 0.5,\n        r0: 2.3,\n        taux_tgs: 0.81,\n        taux_thr: 0.05,\n        tem: 6,\n        tmg: 9,\n        tmh: 6,\n        thg: 6,\n        thr: 1,\n        trsr: 10,\n        lim_time: 250,\n    };\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={initialValues}\n            onSubmit={(values, { setSubmitting }) => {\n                onChange({\n                    population: parseFloat(values['population']),\n                    kpe: parseFloat(values['kpe']),\n                    krd: parseFloat(values['krd']),\n                    r0: parseFloat(values['r0']),\n                    taux_tgs: parseFloat(values['taux_tgs']),\n                    taux_thr: parseFloat(values['taux_thr']),\n                    tem: parseFloat(values['tem']),\n                    tmg: parseFloat(values['tmg']),\n                    tmh: parseFloat(values['tmh']),\n                    thg: parseFloat(values['thg']),\n                    thr: parseFloat(values['thr']),\n                    trsr: parseFloat(values['trsr']),\n                    lim_time: parseFloat(values['lim_time']),\n                });\n            }}\n            validationSchema={validationSchema()}\n        >\n            {(props) => (\n                <Form>\n                    <Grid\n                        className={classes.grid}\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        <FormikFormText name=\"population\" formikProps={props} />\n                        <FormikFormText name=\"kpe\" formikProps={props} />\n                        <FormikFormText name=\"r0\" formikProps={props} />\n                        <FormikFormText name=\"taux_tgs\" formikProps={props} />\n                        <FormikFormText name=\"taux_thr\" formikProps={props} />\n                        <FormikFormText name=\"krd\" formikProps={props} />\n                    </Grid>\n                    <Grid\n                        className={classes.grid}\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        <FormikFormText name=\"tem\" formikProps={props} />\n                        <FormikFormText name=\"tmg\" formikProps={props} />\n                        <FormikFormText name=\"tmh\" formikProps={props} />\n                        <FormikFormText name=\"thg\" formikProps={props} />\n                        <FormikFormText name=\"thr\" formikProps={props} />\n                        <FormikFormText name=\"lim_time\" formikProps={props} />\n                    </Grid>\n                    <Button\n                        className={classes.actions}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                    >\n                        {t('form.compute')}\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslate } from 'react-polyglot';\nimport { generateDates } from '../utils/dateGenerator';\n\nconst day0 = new Date(2020, 0, 23);\n\nexport const Chart = (values) => {\n    const t = useTranslate();\n\n    const {\n        recovered,\n        exposed,\n        infected,\n        dead,\n        hospitalized,\n        intensive_care,\n        exit_intensive_care,\n    } = values;\n\n    const lineData = {\n        labels: generateDates(day0, exposed.length),\n        datasets: [\n            {\n                label: [t('chart.intensive_care')],\n                data: intensive_care,\n                backgroundColor: 'rgba(54, 54, 255, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.exit_intensive_care'),\n                data: exit_intensive_care,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.hospitalized'),\n                data: hospitalized,\n                backgroundColor: 'rgba(255, 88, 132, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.dead'),\n                data: dead,\n                backgroundColor: 'rgba(88, 88, 88, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.infected'),\n                data: infected,\n                backgroundColor: 'rgba(255, 158, 132, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.recovered'),\n                data: recovered,\n                backgroundColor: 'rgba(88, 235, 88, 0.6)',\n                borderWidth: 2,\n            },\n            {\n                label: t('chart.exposed'),\n                data: exposed,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderWidth: 2,\n            },\n        ],\n    };\n\n    return (\n        <div className=\"Chart\">\n            <Line\n                data={lineData}\n                width=\"10\"\n                height=\"10\"\n                options={{\n                    title: {\n                        display: true,\n                        text: 'Modèle SIR Complexe',\n                        fontSize: 25,\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: (tooltipItem, data) => {\n                                let label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                if (label) {\n                                    label += ': ';\n                                }\n                                label += Math.round(tooltipItem.yLabel * 100) / 100;\n                                return label;\n                            },\n                        },\n                    },\n                    scales: {\n                        yAxes: [\n                            {\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Volume de population',\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                        xAxes: [\n                            {\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Temps',\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                    },\n                }}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Grid, Typography, Card, CardContent } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { SIRForm } from './ComplexSIRForm';\nimport { Chart } from './ComplexChartView';\nimport api from '../utils/api';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            paddingTop: theme.spacing(4),\n            paddingLeft: theme.spacing(4),\n            paddingRight: theme.spacing(4),\n        },\n        card: {\n            margin: '3pt',\n        },\n    }),\n);\n\nexport const ComplexSIRView = () => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState();\n    // eslint-disable-next-line no-console\n    console.log({ values });\n\n    const handleClick = async (parameters) => {\n        const response = await api.get('/get_complex_sir', {\n            params: { parameters },\n        });\n        setValues(response.data);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" spacing={3}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Paramètres du modèle SIR complexe\n                        </Typography>\n                        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n                            <Grid item xs={12}>\n                                <SIRForm onChange={handleClick} />\n                            </Grid>\n                            {values && (\n                                <Grid item xs={8}>\n                                    {' '}\n                                    {Chart(values)}{' '}\n                                </Grid>\n                            )}\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect, Link as RouterLink } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport { Paper, Tabs, Tab } from '@material-ui/core';\nimport { useTranslate } from 'react-polyglot';\nimport { TestAPI } from './testApi/TestAPI';\nimport { SIRView } from './simpleSir/SIRView';\nimport { ComplexSIRView } from './complexSir/ComplexSIRView';\n\nconst Home = ({ match }) => {\n    const path = match ? match.path : '';\n    const [value, setValue] = React.useState(`${path}/simpleSIR`);\n    const t = useTranslate();\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <>\n            <header>\n                <Paper square>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                        aria-label=\"disabled tabs example\"\n                    >\n                        <Tab\n                            label={t('home.simpleSIR')}\n                            component={RouterLink}\n                            value={`${path}/simpleSIR`}\n                            to={`${path}/simpleSIR`}\n                        />\n                        <Tab\n                            label={t('home.complexSIR')}\n                            component={RouterLink}\n                            value={`${path}/complexSIR`}\n                            to={`${path}/complexSIR`}\n                        />\n                        <Tab\n                            label={t('home.testAPI')}\n                            component={RouterLink}\n                            value={`${path}/testAPI`}\n                            to={`${path}/testAPI`}\n                        />\n                    </Tabs>\n                </Paper>\n            </header>\n            <main>\n                <Switch>\n                    <Route\n                        path={`${path}`}\n                        exact\n                        render={() => <Redirect to={`${path}/simpleSIR`} />}\n                    />\n                    <Route\n                        path={`${path}/simpleSIR`}\n                        render={(routeProps) => {\n                            setValue(`${path}/simpleSIR`);\n                            return <SIRView />;\n                        }}\n                    />\n                    <Route\n                        path={`${path}/complexSIR`}\n                        render={(routeProps) => {\n                            setValue(`${path}/complexSIR`);\n                            return <ComplexSIRView />;\n                        }}\n                    />\n                    <Route\n                        path={`${path}/testAPI`}\n                        render={(routeProps) => {\n                            setValue(`${path}/testAPI`);\n                            return <TestAPI />;\n                        }}\n                    />\n                    <Route render={() => <NotFound />} />\n                </Switch>\n            </main>\n        </>\n    );\n};\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { I18n } from 'react-polyglot';\nimport LocaleContext from './utils/localeContext';\nimport messages from './messages';\nimport { MainAppBar } from './appBar/MainAppBar';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport Home from './Home';\n\nconst App = () => {\n    const initialLocale = 'fr';\n    const localeStateHook = React.useState(initialLocale);\n    const [locale, setLocale] = localeStateHook;\n\n    return (\n        <LocaleContext.Provider value={localeStateHook}>\n            <I18n locale={locale} messages={locale === 'fr' ? messages.fr : messages.en}>\n                <div className=\"App\">\n                    <HashRouter basename=\"/\">\n                        <MainAppBar />\n                        <Switch>\n                            <Route path=\"/\" render={(routeProps) => <Home {...routeProps} />} />\n\n                            <Route render={() => <NotFound />} />\n                        </Switch>\n                    </HashRouter>\n                </div>\n            </I18n>\n        </LocaleContext.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <MyApp />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}